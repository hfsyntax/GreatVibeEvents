import { getProduct, listPrices } from "@/lib/stripe"
import Product from "@/components/shop/Product"
import type { Metadata } from "next"
import { getProductVariants } from "@/actions/server"

export const metadata: Metadata = {
  title: "Great Vibe Events - Product View",
  description: "Generated by create next app",
}

export default async function ShopId({ params }: { params: { id: string } }) {
  try {
    const product = await getProduct(params.id)
    const plainProduct = {
      images: product.images,
      metadata: product.metadata,
      name: product.name,
      description: product.description,
      created: product.created,
      id: product.id,
    }
    const productPrices = await listPrices({ product: product.id, limit: 100 })
    const plainPrices = productPrices.data.map((price) => price.unit_amount)
    let productImages = []
    if (product.images.length > 0)
      productImages.push({ name: product.name, image_url: product.images[0] })
    if (plainProduct.metadata.variants) {
      const allImages = await getProductVariants(product.id)
      if (allImages.length > 0) productImages = productImages.concat(allImages)
    }
    return (
      <Product
        item={plainProduct}
        prices={plainPrices}
        variants={productImages}
      />
    )
  } catch (error: any) {
    console.error(error)
    if (error.type === "StripeInvalidRequestError") {
      return <span className="text-red-500">{error.raw.message}</span>
    } else {
      return <span className="text-red-500">Internal server error</span>
    }
  }
}
