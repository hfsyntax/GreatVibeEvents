import type { Metadata } from "next"
import StripeLoader from "@/components/checkout/StripeLoader"
import { getCheckoutData } from "@/lib/session"
import EventTicket from "@/components/events/EventTicket"

export const metadata: Metadata = {
  title: "Great Vibe Events - Checkout",
  description: "Generated by create next app",
}

export default async function Checkout() {
  try {
    const checkoutData = await getCheckoutData()
    if (!checkoutData || checkoutData.products.length === 0) {
      return <span className="text-red-500">Invalid checkout data.</span>
    }

    const eventTicket = checkoutData.products.find(
      (product) => product.metadata && product.metadata.type === "Event Ticket",
    )

    if (eventTicket && eventTicket.metadata) {
      const eventDate = parseInt(eventTicket.metadata.starts)
      const eventEnds = eventTicket.metadata.ends
      const eventAddress = eventTicket.metadata.address
      if (!eventDate || !eventEnds || !eventAddress) {
        return (
          <span className="text-red-500">
            Event ticket is not available for purchase.
          </span>
        )
      }

      const now = Date.now()
      if (now > eventDate) {
        return (
          <span className="text-red-500">
            Event ticket is not available for purchase.
          </span>
        )
      }
    }

    return <StripeLoader />
  } catch (error: any) {
    console.error(error)
    if (error.type === "StripeInvalidRequestError") {
      return <span className="text-red-500">{error.raw.message}</span>
    } else {
      return <span className="text-red-500">Internal server error</span>
    }
  }
}
