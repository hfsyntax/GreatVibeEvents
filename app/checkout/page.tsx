import type { Metadata } from "next"
import StripeLoader from "@/components/checkout/StripeLoader"
import { getProduct } from "@/lib/stripe"

export const metadata: Metadata = {
  title: "Great Vibe Events - Checkout",
  description: "Generated by create next app",
}

export default async function Checkout({
  searchParams,
}: {
  searchParams: {
    product_id?: string
  }
}) {
  try {
    if (!searchParams.product_id) {
      return <span className="text-red-500">Invalid product data.</span>
    }

    const product = await getProduct(searchParams.product_id)

    if (!product) {
      return <span className="text-red-500">Product not found.</span>
    }

    if (product.metadata.type === "Event Ticket") {
      const eventDate = parseInt(product.metadata.starts)
      const eventEnds = product.metadata.ends
      const eventAddress = product.metadata.address
      if (!eventDate || !eventEnds || !eventAddress) {
        return (
          <span className="text-red-500">
            Event ticket is not available for purchase.
          </span>
        )
      }

      const now = Date.now()
      if (now > eventDate) {
        return (
          <span className="text-red-500">
            Event ticket is not available for purchase.
          </span>
        )
      }
    }

    const plainProduct = {
      id: product.id,
      name: product.name,
      metadata: product.metadata,
      images: [],
      created: product.created,
    }

    return <StripeLoader product={plainProduct} />
  } catch (error: any) {
    console.error(error)
    if (error.type === "StripeInvalidRequestError") {
      return <span className="text-red-500">{error.raw.message}</span>
    } else {
      return <span className="text-red-500">Internal server error</span>
    }
  }
}
